{"ast":null,"code":"var _jsxFileName = \"/Users/danieliuskalinin/Desktop/face-detect/src/App.js\";\nimport React, { Component } from \"react\";\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_ID = 'dejavudaniel';\nconst PAT = '5353881fbd5b446c8a1ab1e2279ff0db';\nconst APP_ID = 'face-detect';\nconst MODEL_ID = 'face-detection';\nconst MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\nconst IMAGE_URL = '';\nconst raw = JSON.stringify({\n  \"user_app_id\": {\n    \"user_id\": USER_ID,\n    \"app_id\": APP_ID\n  },\n  \"inputs\": [{\n    \"data\": {\n      \"image\": {\n        \"url\": IMAGE_URL\n      }\n    }\n  }]\n});\nconst requestOptions = {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Authorization': 'Key ' + PAT\n  },\n  body: raw\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n    };\n    this.state = {\n      input: '',\n      imageUrl: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ParticlesBg, {\n        num: 500,\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ParticlesBg","FaceRecognition","Navigation","Logo","Rank","ImageLinkForm","USER_ID","PAT","APP_ID","MODEL_ID","MODEL_VERSION_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","onInputChange","event","setState","input","target","value","onButtonSubmit","imageUrl","state","fetch","then","response","text","result","console","log","catch","error","render"],"sources":["/Users/danieliuskalinin/Desktop/face-detect/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ParticlesBg from 'particles-bg'\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport './App.css';\n\n\nconst USER_ID = 'dejavudaniel';\nconst PAT = '5353881fbd5b446c8a1ab1e2279ff0db';\nconst APP_ID = 'face-detect';\nconst MODEL_ID = 'face-detection';\nconst MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\nconst IMAGE_URL = '';\n\nconst raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n        {\n            \"data\": {\n                \"image\": {\n                    \"url\": IMAGE_URL\n                }\n            }\n        }\n    ]\n});\n\nconst requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n    },\n    body: raw\n};\n\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            input: '',\n            imageUrl: ''\n        }\n    }\n\n    onInputChange = (event) => {\n        this.setState({input: event.target.value});\n    }\n\n    onButtonSubmit = () => {\n        this.setState({imageUrl: this.state.input});\n        fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n    }\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Navigation />\n                <Logo />\n                <Rank />\n                <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} /> \n                <FaceRecognition imageUrl={this.state.imageUrl} />\n                <ParticlesBg num={500} type=\"cobweb\" bg={true} />\n            </div>\n        );\n    }\n} export default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,eAAe,MAAM,8CAA8C;AAC1E,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAO,WAAW;AAAC;AAGnB,MAAMC,OAAO,GAAG,cAAc;AAC9B,MAAMC,GAAG,GAAG,kCAAkC;AAC9C,MAAMC,MAAM,GAAG,aAAa;AAC5B,MAAMC,QAAQ,GAAG,gBAAgB;AACjC,MAAMC,gBAAgB,GAAG,kCAAkC;AAC3D,MAAMC,SAAS,GAAG,EAAE;AAEpB,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;EACvB,aAAa,EAAE;IACX,SAAS,EAAER,OAAO;IAClB,QAAQ,EAAEE;EACd,CAAC;EACD,QAAQ,EAAE,CACN;IACI,MAAM,EAAE;MACJ,OAAO,EAAE;QACL,KAAK,EAAEG;MACX;IACJ;EACJ,CAAC;AAET,CAAC,CAAC;AAEF,MAAMI,cAAc,GAAG;EACnBC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE;IACL,QAAQ,EAAE,kBAAkB;IAC5B,eAAe,EAAE,MAAM,GAAGV;EAC9B,CAAC;EACDW,IAAI,EAAEN;AACV,CAAC;AAID,MAAMO,GAAG,SAASpB,SAAS,CAAC;EACxBqB,WAAW,GAAG;IACV,KAAK,EAAE;IAAC,KAOZC,aAAa,GAAIC,KAAK,IAAK;MACvB,IAAI,CAACC,QAAQ,CAAC;QAACC,KAAK,EAAEF,KAAK,CAACG,MAAM,CAACC;MAAK,CAAC,CAAC;IAC9C,CAAC;IAAA,KAEDC,cAAc,GAAG,MAAM;MACnB,IAAI,CAACJ,QAAQ,CAAC;QAACK,QAAQ,EAAE,IAAI,CAACC,KAAK,CAACL;MAAK,CAAC,CAAC;MAC3CM,KAAK,CAAC,qCAAqC,GAAGrB,QAAQ,GAAG,YAAY,GAAGC,gBAAgB,GAAG,UAAU,EAAEK,cAAc,CAAC,CACjHgB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACnCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;IACpD,CAAC;IAhBG,IAAI,CAACT,KAAK,GAAG;MACTL,KAAK,EAAE,EAAE;MACTI,QAAQ,EAAE;IACd,CAAC;EACL;EAeAW,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC,KAAK;MAAA,wBAChB,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eACd,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACR,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACR,QAAC,aAAa;QAAC,aAAa,EAAE,IAAI,CAAClB,aAAc;QAAC,cAAc,EAAE,IAAI,CAACM;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG,eACzF,QAAC,eAAe;QAAC,QAAQ,EAAE,IAAI,CAACE,KAAK,CAACD;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAClD,QAAC,WAAW;QAAC,GAAG,EAAE,GAAI;QAAC,IAAI,EAAC,QAAQ;QAAC,EAAE,EAAE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/C;EAEd;AACJ;AAAE,eAAeT,GAAG"},"metadata":{},"sourceType":"module"}